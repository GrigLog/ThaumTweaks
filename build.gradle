buildscript {
    repositories {
        mavenCentral()
        maven {url = "https://maven.minecraftforge.net/"}
		maven {
            name = "Github with all the libraries Forge has broken"
            url = "https://github.com/juanmuscaria/maven/raw/master"
        }
        maven {url = 'https://repo.spongepowered.org/maven'}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle2:[2.3-1.0.0-SNAPSHOT,)'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

repositories {
    mavenCentral()
    maven {url = 'https://repo.spongepowered.org/maven'}
    maven { url "https://www.cursemaven.com" }
	flatDir {dir 'libs'}
}

version = mod_version
group = mod_group
archivesBaseName = mod_archives_name
idea.module.inheritOutputDirs = true  //without this models dont load for some reason...

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	version = mc_version + "-" + forge_version
    mappings = "snapshot_20171003"
	runDir = "run"
    
	replace '@VERSION@', project.version
	// makeObfSourceJar = false
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
		'mod_id': mod_id,
		'mod_name': mod_name,
		'mod_author': mod_author,
		'mod_description': mod_description,
		'mc_version': mc_version,
		'mod_version': mod_version,
		'mod_icon': mod_icon
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dependencies {
    compile 'org.spongepowered:mixin:0.8-SNAPSHOT'
    compile files('libs/Thaumcraft-1.12.2-6.1.BETA26-deobf.jar')
    deobfCompile ("curse.maven:mixin-booter-419286:3687785")
}

sourceSets.main.ext.refMap = "mixins.thaumtweaks.refmap.json"

task devJar(type: Jar) {
	classifier = 'dev'
	from sourceSets.main.output
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives devJar
	archives sourcesJar
}

//this stores all the dependencies locally. I couldn't get it to work though. Must've done it before Forge ruined everything...
task copyDependencies(type: Copy){
    configurations.each {
        if (it.isCanBeResolved())
            from it into "gradle_dependencies"
    }
    from buildscript.configurations.classpath into "gradle_dependencies"
}